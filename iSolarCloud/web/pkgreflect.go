// Code generated by github.com/ungerik/pkgreflect DO NOT EDIT.

package web

import "reflect"

var Types = map[string]reflect.Type{
	"Required": reflect.TypeOf((*Required)(nil)).Elem(),
	"SunGroAuth": reflect.TypeOf((*SunGroAuth)(nil)).Elem(),
	"Token": reflect.TypeOf((*Token)(nil)).Elem(),
	"TokenRequest": reflect.TypeOf((*TokenRequest)(nil)).Elem(),
	"TokenResponse": reflect.TypeOf((*TokenResponse)(nil)).Elem(),
	"Web": reflect.TypeOf((*Web)(nil)).Elem(),
}

var Functions = map[string]reflect.Value{
	"AsArray": reflect.ValueOf(AsArray),
	"FindInStruct": reflect.ValueOf(FindInStruct),
	"GetCmdName2": reflect.ValueOf(GetCmdName2),
	"GetName": reflect.ValueOf(GetName),
	"GetOptionsRequired": reflect.ValueOf(GetOptionsRequired),
	"GetPackageName": reflect.ValueOf(GetPackageName),
	"GetStructName": reflect.ValueOf(GetStructName),
	"GetStructName2": reflect.ValueOf(GetStructName2),
	"HeaderAsArray": reflect.ValueOf(HeaderAsArray),
	"PrintAsJson": reflect.ValueOf(PrintAsJson),
	"PrintHeader": reflect.ValueOf(PrintHeader),
	"PrintValue": reflect.ValueOf(PrintValue),
	"Query": reflect.ValueOf(Query),
	"ReflectAsJson": reflect.ValueOf(ReflectAsJson),
	"VerifyOptionsRequired": reflect.ValueOf(VerifyOptionsRequired),
}

var Variables = map[string]reflect.Value{
	"GrantPassword": reflect.ValueOf(&GrantPassword),
	"GrantRefresh": reflect.ValueOf(&GrantRefresh),
	"TokenRequestUrl": reflect.ValueOf(&TokenRequestUrl),
}

var Consts = map[string]reflect.Value{
	"DateTimeFormat": reflect.ValueOf(DateTimeFormat),
	"DefaultAuthTokenFile": reflect.ValueOf(DefaultAuthTokenFile),
}

