// Code generated by github.com/ungerik/pkgreflect DO NOT EDIT.

package domain

import "reflect"

var Types = map[string]reflect.Type{
	"Billing": reflect.TypeOf((*Billing)(nil)).Elem(),
	"BillingRequest": reflect.TypeOf((*BillingRequest)(nil)).Elem(),
	"BillingResponse": reflect.TypeOf((*BillingResponse)(nil)).Elem(),
	"BillingResponseSingle": reflect.TypeOf((*BillingResponseSingle)(nil)).Elem(),
	"Count": reflect.TypeOf((*Count)(nil)).Elem(),
	"CountRequest": reflect.TypeOf((*CountRequest)(nil)).Elem(),
	"CountResponse": reflect.TypeOf((*CountResponse)(nil)).Elem(),
	"Create": reflect.TypeOf((*Create)(nil)).Elem(),
	"CreateRequest": reflect.TypeOf((*CreateRequest)(nil)).Elem(),
	"CreateResponse": reflect.TypeOf((*CreateResponse)(nil)).Elem(),
	"Delete": reflect.TypeOf((*Delete)(nil)).Elem(),
	"DeleteRequest": reflect.TypeOf((*DeleteRequest)(nil)).Elem(),
	"DeleteResponse": reflect.TypeOf((*DeleteResponse)(nil)).Elem(),
	"Domain": reflect.TypeOf((*Domain)(nil)).Elem(),
	"List": reflect.TypeOf((*List)(nil)).Elem(),
	"ListRequest": reflect.TypeOf((*ListRequest)(nil)).Elem(),
	"ListResponse": reflect.TypeOf((*ListResponse)(nil)).Elem(),
	"ListResponseSingle": reflect.TypeOf((*ListResponseSingle)(nil)).Elem(),
	"Read": reflect.TypeOf((*Read)(nil)).Elem(),
	"ReadRequest": reflect.TypeOf((*ReadRequest)(nil)).Elem(),
	"ReadResponse": reflect.TypeOf((*ReadResponse)(nil)).Elem(),
	"ReadResponseSingle": reflect.TypeOf((*ReadResponseSingle)(nil)).Elem(),
	"Update": reflect.TypeOf((*Update)(nil)).Elem(),
	"UpdateRequest": reflect.TypeOf((*UpdateRequest)(nil)).Elem(),
	"UpdateResponse": reflect.TypeOf((*UpdateResponse)(nil)).Elem(),
}

var Functions = map[string]reflect.Value{
}

var Variables = map[string]reflect.Value{
}

var Consts = map[string]reflect.Value{
	"BillingUrl": reflect.ValueOf(BillingUrl),
	"CountUrl": reflect.ValueOf(CountUrl),
	"CreateUrl": reflect.ValueOf(CreateUrl),
	"DeleteUrl": reflect.ValueOf(DeleteUrl),
	"ListUrl": reflect.ValueOf(ListUrl),
	"ReadUrl": reflect.ValueOf(ReadUrl),
	"UpdateUrl": reflect.ValueOf(UpdateUrl),
}

